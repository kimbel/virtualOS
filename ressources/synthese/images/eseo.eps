%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 12.0.0%%For: (james bond) (mi5)%%Title: (logoEseo-groupe.eps)%%CreationDate: 27/07/06 18:18%%BoundingBox: 366 266 476 341%%HiResBoundingBox: 366.2588 266.5693 475.957 341%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKCustomColor: 1 1 1 1 ([Rep\616rage])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 65537 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 421.5 296.7754 421.5 296.7754%AI3_TileBox: 11.9448 12.1377 829.9453 583.1377%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 841.8898 595.2756%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 3%AI8_OpenToView: 211.3335 466.9419 3 1268 945 26 0 0 6 73 0 0%AI5_OpenViewLayers: 777%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 88 8%%BeginData: 14280 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0DFF2F2F062FA9FD0DFF060706072FFD0FFF292F0653FD0EFF5A%2FFFFFFF2FA9FD0CFFA90607062FA8FD0EFF2F0607062FA8FD1AFF2F2FFF%FF292FFD0DFF297EFFA80653FD0DFF292FFFFF0653FD0DFF7E06FFFFFF06%AFFD0CFF7E07A9FF2907FD0EFF287EFFFFA8FD1AFFA9077EFFFFFF7EFD0D%FF07FFFFFF2F2FFD0CFFA807A9FFFFA806FD0DFF532FFFFFFF2FA9FD0CFF%8406FFFFA906FD0EFF2F7EFD1DFFA906FFFFA97EFD0DFFA82F2F5A2F077E%FD0CFF7E06FFFFFFA80784FD0CFF5A06FFFFFF06FD0DFF7E06597E062FFD%0EFF2807282F7EFD1AFFA807FFFF532F06FD0DFF0753530759FD0DFF7E2F%FD04FF06AFFD0CFF592FFFFFFF2FA9FD0CFFA806532F53A9FD0EFF2F53A9%84FD1CFF0684FFFFA806A8FD0BFFA82FA8FF532FFD0DFFA906A9FFFF5907%FD0DFF7E06FFFFFF06FD0DFF7E07FD12FF2984FD1EFF5A06A9A82F06FD0D%FF06A9FFFF06A8FD0DFF5306FFA80759FD0DFFA80759A92F2FFD0DFF8406%FD12FF2F53A97EA9FD1CFF5906292F53A8FD0CFF53A8FFFF5353FD0EFF53%062F53FD0FFF5907062FA8FD0DFF7E53FD12FF532F292F28A9FDFCFFFDFC%FFFDC4FFA8A87E847EFD31FF7E847EA8A8FD27FFA853532F542F532F542F%532F542F532F532FA9FD09FF7E29070607060706537EFD0FFF7E5A2F542F%532F542F532F542F532F542F537EFD09FF7E2F0607060706292F84FD23FF%A82F0106060601060606010606060106060601067DA8A8FD05FF7E0701FD%0706010628A8A8FD0AFFA9FD040601060606010606060106060601060159%A8FD06FFA8FD08060106062F7EFD20FFA807060706070607060706070607%060706070607067EA8FD05FF5A0706070607060706070607060706A8FD09%FFA9060706070607060706070607060706070607060753A8A8FD04FF7E06%070607060706070607060706297EFD1EFFA8070606060706060607060606%0706060607FD04067DA8A8FFFFFF53FD0406070606060706060607060606%A8A8FD07FF06060607060606070606060706060607060606070659A8FD04%FF7E060606070606060706060607060606077DFD1DFF5A06070607060706%07060706070607060706070607067EA8FFFFFF8406060706070607060706%0706070607060606A8AFFD05FF5307060706070607060706070607060706%070607060759A8A8FFFFA906070607060706070607060706070607062FA8%FD1CFFFD160659A8A8FFFF29FD12062FA8A8FD04FF0701FD1306017DA8FF%FFFFFD12060153A8FD1AFFA8070607060706070607060706070607060706%070607067EA8FFFF7E060706070607060706070607060706070607062FA8%FD05FF0607060706070607060706070607060706070607060759A8A8FF7E%0706070607060706070607060706070607060706A8A8FD19FFA906060607%0606060706060607060606070606060706067DA8A8FFFD05060706060607%060606070606060706060159A8FFFFFFA806060706060607060606070606%0607060606070606067EA8FFFF2F06060607060606070606060706060607%FD04062FA8A8FD18FFA80706070607060653FD04A8A9A8A8A8A9A8A8A8A9%A8A9A8FFA9070607060706077EA8A8FFA8A9A85A06070607060628A8A8FF%FFA90607060706070653A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8FFFFFF0607%06070607067EA8A9A8A9A8FF530606070607062FA8FD19FFA9FD070653A8%AFFD0FFF7EFD0706A8A8FD05FF53FD07067EA8FFFFA8FD070628A8A8FD0D%FFAFFF7EFD07067DA8A8FD04FF5A01FD0606A8A8FD18FFA8070607060706%0753FFA8FD0FFF59060607060706077EA8FD05FF7E06070607060706A8A8%FFFFAF0607060706070653A8FD10FF7E060706070607067EA8FD05FF5306%0607060706077EA8FD18FFA9FD0506070653A8FD10FF5A06060607060606%A8A8FD05FF53FD04060706067DA8A8FFA80706060607060629A8A8FD0FFF%53060607FD04067DA8A8FD04FF5A060606070606067EA8FD18FFA8070607%0607060753A8A8FD0FFF53070607060706077EA8FD05FF5A060706070607%06A8A8FFFFA90607060706070653A8FD10FF5A060706070607067EA8FD05%FF53070607060706077DA8A8FD17FFA9FD06060153A8A8FD0FFF5901FD06%067EA8FD05FF53FD07067DA8A8FFA8FD07062FA8A8FD0FFF53FD070659A8%A8FD04FF5901FD06067EA8FD18FFA80706070607060753A8A8FD0FFF5307%0607060706077EFD06FF5A06070607060706A8A8FFFFA906070607060706%53A8FD10FF7E060706070607067EA8FD05FF53070607060706077DA9AFFD%17FFA90606060706060153A8A8FD0FFF590107FD050684A8FD05FF530606%07060606077DA8A8FFA8060607FD04062FA8A8FD0FFF53FD040607060659%A8A8FD04FF59010706060607067EA8FD09FFCFCFC9CAFD0BFFA807060706%07060653A8A8FD0FFF53060607060706077EA8A8FD04FF7E060706070607%06A8A8FFFFA90607060706070653A8FD10FF5A060706070607067EA8FD05%FF53060607060706077DA8A8FFFFFFC9C3BCBB93B58CB08CFD0BFFA9FD07%0653A8AFFD0FFF5A01FD0606A8A8FD05FF53060606010606067DA8A8FFA8%FD070628A8A8FD0FFF53FD07067DA8A8FD04FF5A01FD06067EA8CAA0BB8C%8D8C8D8C8D8C8D8C8DFD0BFFA80706070607060753FFA8FD0FFF53060607%060706077EA8A8FD04FF7E062F062F062F06A8A8FFFFAF06070607060706%53A8FD10FF5A060706070607067EA8FD05FF53060607060706077EA89AB0%8CB08CB08CB08CB58DB593FD0BFFA9FD0506070653A8FD10FF5A06060607%060606A8A8FD07FFA8A8A8FFA8A8A8FFA8FFA80706060607060629A8A8FD%0FFF53060607FD04067DA8A8FD04FF5A060606070606067EA89A8CB08C93%93C2C2C9CAFD0EFFA80706070607060753A8A8FD0FFF5307060706070607%7EA8FD11FFA90607060706070653A8FD10FF7E060706070607067EA8FD05%FF53070607060706077DA89AB09ACAFD14FFA9FD06060153A8A8FD0FFF59%01FD06067EA8FD11FFA8FD07062FA8A8FD0FFF53FD070659A8A8FD04FF59%01FD06067EA8CACAFD16FFA80706070607060753A8A8FD0FFF5307060706%0706077EFD12FFA90607060706070653A8FD10FF7E060706070607067EA8%FD05FF53070607060706077DA8AFFD17FFA90606060706060153A8A8FD0F%FF590107FD050684A8FD11FFA8060607FD04062FA8A8FD0FFF53FD040607%060659A8A8FD04FF59010706060607067EA8FD18FFA80706070607060653%A8A8FD0FFF53060607060706077EA8A8FD10FFA90607060706070653A8FD%10FF5A060706070607067EA8FD05FF53060607060706077DA8A8FD17FFA9%FD070653A8AFFD0FFF5A01FD0606A8A8FD11FFA8FD070628A8A8FD0FFF53%FD07067DA8A8FD04FF53FD07067EA8FD18FFA80706070607060753FFA8FD%0FFF53060607060706077EA8A8FD10FFAF0607060706070653A8FD10FF5A%060706070607067EA8FD04FFC94B070607060706077EA8A8FD17FFA9FD05%06070653A8FD10FF5A06060607060606A8A8FD11FFA80706060607060629%A8A8FD0FFF53060607FD04067DA8A8FFFFCA8C6F060606070606067EA8FD%18FFA80706070607060753A8A8FD0FFF53070607060706077EA8FD11FFA9%0607060706070653A8FD10FF7E060706070607067EA8FFFFFF93B04B0706%07060706077DA8A8FD17FFA9FD06060153A8A8FD0FFF5901FD06067EA8FD%11FFA8FD07062FA8A8FD0FFF53FD070659A8A8FF938D8C4BFD07067EA8FD%18FFA80706070607060753A8A8FD0FFF53070607060706077EFD12FFA906%07060706070653A8FD10FF7E060706070607067EA8FFC3B08CB04B070607%060706077DA9AFFD17FFA906060607060601537EA8A8A9A8A9A8A9A8A8A8%FD06FF590107FD05067E7DA8A8A9A8A9A8A9A8FD09FFA8060607FD040629%A87EA9A8A9A8A9A8A9A8FD07FF53FD040607060659A8A88D8CB0995A0107%06060607067EA8FD18FFA807060706070607060706070607060706070653%A8FD05FF5306060706070607060706070607060706072FA8FD07FFA90607%060706070607060706070607060706062FFD06FF5A060706070607067EA8%C28CB08CFF59060607060706077DA8A8FD17FFA9FD120629A8A8FD04FF5A%FD12060153A8FD05FFA8FD12062F84A8FD04FF53FD07067DA8998D8CC3FF%5A01FD06067EA8FD18FFA807060706070607060706070607060706070653%A8FD05FF7E070607060706070607060706070607060706070653A8FD04FF%AF0607060706070607060706070607060706072FFFA8FD04FF5A06070607%0607067EA8C28CBBFFFF53060607060706077EA8A8FD17FFA9FD05060706%06060706060607FD04062FA8A8FD05FF0606060706060607060606070606%0607FD05067EA8FFFFFFA807060606070606060706060607060606070653%A8A8FD04FF53060607FD04067DA899B0C9FFFF5A060606070606067EA8FD%18FFA807060706070607060706070607060706070653A8FD06FFA8060706%070607060706070607060706070607060729A8A8FFFFA906070607060706%07060706070607060706072FA8A8FD04FF7E060706070607067EA89A93FF%FFFF53070607060706077DA8A8FD17FFA9FD120628A8A8FD06FF77FD1406%7EA8A8FFA8FD11060153A8A8FD04FF53FD070659A89ACAFFFFFF5901FD06%067EA8FD18FFA807060706070607060706070607060706070653A8FD05FF%CABC8C6F28070607060706070607060706070607060706A8A8FFFFA90607%060706070607060706070607060706072FA8A8FD04FF7E06070607060706%7EA8FD05FF7E070607060706077DA9AFFD17FFA90606060706060607282F%282F282F282F282953A8A8FFFFFF998D8CB08C8D6F532F5328532F532853%06060607060606077DA8A8FFA8060607FD05062F282F282F282F282F0659%A8A8FD04FF53FD040607060659A8A8FD04FF7E060706060607067EA8FD18%FFA80706070607060653A8A8FFA8FFA8FFA8FFA8FFA8FFFFCF93B08CB08C%BBC3FD05FFA8FFFFFFA87E06070607060706A8A8FFFFA906070607060706%53A8A8A8FFA8FFA8FFA8FFA8FFA8FD04FF5A060706070607067EA8FD05FF%7E060607060706077DA8A8FD17FFA9FD070653A8FD0CFFC98C8D8C8D93C9%FD0CFF53FD07067DA8A8FFA8FD070628A8A8FD0FFF53FD07067DA8A8FD04%FF7EFD07067EA8FD18FFA80706070607060753FFA8FD0AFFC38CB08CB0C2%FD0EFF7E06070607060706A8A8FFFFAF0607060706070653A8FD10FF5A06%0706070607067EA8FD05FF7E070607060706077EA8A8FD17FFA9FD050607%0653A8FD0AFFC28CB08C8DA1FD0FFF53FD04060706067DA8A8FFA8070606%0607060629A8A8FD0FFF53060607FD04067DA8A8FD04FF7E060606070606%067EA8FD18FFA80706070607060753A8A8FD08FFC38CB08CB5CAFD10FF5A%06070607060706A8A8FFFFA90607060706070653A8FD10FF7E0607060706%07067EA8FD05FF5A070607060706077DA8A8FD17FFA9FD06060153A8A8FD%07FFC28C8D8C93CAFD11FF53FD07067DA8A8FFA8FD07062FA8A8FD0FFF53%FD070659A8A8FD04FF7E01FD06067EA8FD18FFA80706070607060753A8A8%FD06FFC38CB08CB5CFFD12FF5A06070607060706A8A8CFFFA90607060706%070653A8FD10FF7E060706070607067EA8FD05FF7E070607060706077DA9%AFFD17FFA90606060706060153A8A8FD05FFC98C8D8CB5CAFD13FF530606%07060606077EA893C3A8060607FD04062FA8A8FD0FFF53FD040607060659%A8A8FD04FF7E060706060607067EA8FD18FFA80706070607060653A8A8FD%04FFC98CB08CB5CAFD14FF7E06070607060706A8A8BC8CA1060706070607%0653A8FD0FFFC270060706070607067EA8FD05FF7E060607060706077DA8%A8FD17FFA9FD070653A8AFFFFFFFCA8C8D8CB5CAFD15FF53FD07067DA899%8D68FD070628A8A8FD0DFFA08D45FD07067DA8A8FD04FF7EFD07067EA8FD%18FFA80706070607060753FFA8FFFFFF8DB08CB5CAFD16FF7E0607060706%0706A8A8BC8C930607060706070653A8FD0DFFC2B08C7006070607060706%7EA8FD05FF7E070607060706077EA8A8FD17FFA9FD0506070653A8FFFFFF%8CB08C8DC3FD17FF53FD04060706067DA8A78D680706060607060629A8A8%FD0AFFCF938D8CB04B060607FD04067DA8A8FD04FF7E060606070606067E%A8FD18FFA80706070607060753A8A8FF93B08CB0C3FD09FFA8A9A8A9A8A9%A8A9FD07FF5A06070607060706A8A8FFCA930607060706070653A8FD09FF%CAC28CB08CB09377060706070607067EA8FD05FF5A070607060706077DA8%A8FD17FFA9FD06060153A8A8998D8C8D9AFD0AFF5901FD0606A8A8FD05FF%53FD07067DA8A8FFA8FD07062FA8A1BB99BC9AC299BB8C8D8C8D8C8D99FF%53FD070659A8A8FD04FF7E01FD06067EA8FD18FFA80706070607060753A8%A1B08CB099FD0BFF53070607060706077EA9FD05FF5A06070607060706A8%A8FFFFAF0607060706070653A8C98CB08CB08CB08CB08CB08CBBC9FFFF7E%060706070607067EA8FD05FF7E070607060706077DA9AFFD17FFA9060606%0706060153A8A18CB093FD0CFF590107FD050684A8FD05FF530606070606%06077DA8A8FFA8060607FD04062FA8A0B08C8D8CB08C8D8CB593C9FD04FF%53FD040607060659A8A8FD04FF7E060706060607067EA8FD18FFA8070607%0607060653A8A1B093FD0DFF53060607060706077EA8A8FD04FF7E060706%07060706A8A8FFFFA90607060706070653A8CAC2C3C2C29AC3C3CACFFD06%FF5A060706070607067EA8FD05FF7E060607060706077DA8A8FD17FFA9FD%070653A8A18CFD0EFF5A01FD0606A8A8FD05FF53FD07067DA8A8FFA8FD07%0628A8A8FD0FFF53FD07067DA8A8FD04FF7EFD07067EA8FD18FFA8070607%0607060753FFA7FD0FFF53060607060706077EA8A8FD04FF7E0607060706%0706A8A8FFFFAF0607060706070653A8FD10FF5A060706070607067EA8FD%05FF7E070607060706077EA8A8FD17FFA9FD0506070653A8FD10FF5A0606%0607060606A8A8FD05FF53FD04060706067DA8A8FFA80706060607060629%A8A8FD0FFF53060607FD04067DA8A8FD04FF7E060606070606067EA8FD18%FFA80706070607060753A8A8FD0FFF53070607060706077EA8FD05FF5A06%070607060706A8A8FFFFA90607060706070653A8FD10FF7E060706070607%067EA8FD05FF5A070607060706077DA8A8FD17FFA9FD06060153A8A8FD0F%FF5A01FD06067EA8FD05FF53FD07067DA8A8FFA8FD07062FA8A8FD0FFF59%FD070659A8A8FD04FF7E01FD06067EA8FD18FFA80706070607060753A8A8%FD0FFF7E070607060706077DFD06FF7E06070607060706A8A8FFFFA90607%060706070653A8FD10FFA906070607060706A8A8FD05FF7E070607060706%07A8FD18FF9A93060606070606062F597E597E597E597E597E597E597EA8%FFFFA9FD05060706537D847E847EA92F0606070606062FA8A8FFFFA80606%07FD0406287D537E597E597E597E597E597E53A9FFFFA807060606070606%537E7E847EA884530607FD0506A8A8FD14FFCAC393B06807060706070607%0607060606070606060706060607067EA8FFFF2F06070607060706070607%0607060706070607060653A8A8FFFFA90607060706070607060606070606%060706060607060653FFFFFF2F0706070607060706070607060706070607%0607065AA8A8FD11FFCACA998D8C8D8C8D01FD150659A8A8FF7EFD1406A8%A8FFFFFFA8FD1606597DFFFFA801FD13067DA8A8FD0DFFC9C3C399B58CB0%8CB08CB5C22F0607060706070607060706070607060706070607067EA8FF%FFFF290706070607060706070607060706070607067EA8FD05FF2F070607%06070607060706070607060706070607060753A9AFFFFF53060706070607%06070607060706070607060753FFA8FD0EFF8CB08C8D8CB08C8D8CC2CAFF%59FD040607060606070606060706060607FD04067DA8A8FFFFA9FD050607%06060607060606070606012FA8A8A8FD04FF7E0606060706060607060606%0706060607060606070659A8FFFFFFA807060606070606060706060607FD%0506A8A8FD0FFFB08CB08CB08CBBC3FD05FF290706070607060706070607%0607060706070607067EA8FD04FF84060706070607060706070607060706%2FA8A8A8FD06FF53060706070607060706070607060706070607060759A8%A8FFFFFF8407060706070607060706070607060606A8A8AFFD0FFF99BC99%C2C3CFFD08FF28FD130659A8A8FD04FF7EFD0C06012F7EA8A8FD07FFA82F%01FD1106017DA8FD05FF7E0701FD0C06A8A8A8FD1FFF5A2F060706070607%06070607060706070607067EA8FD07FF2F070607060706070607065AA8A8%A8FD0AFF7E06070607060706070607060706070607060759A8A8FD05FFAF%530607060706070607060753A8A8FD23FFA8597E537D537E537D537E537D%537E53597EA8A8FD07FF7E5306070606062F53FD04A8FD0DFF7E7E535953%7E537D537E537D537E535953A8A8FD08FFA82F2F0606060706537DA8A8FD%42FFFD05A8FFA8FD2FFFA8A8A8FFA8FFA8FD93FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Vectorisation) (Vectorisation.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module externe Adobe Forme diffuse) (Forme diffuse.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module externe Adobe Forme diffuse) (Forme diffuse.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Module externe D\216grad\216 de formes Adobe) (D\216grad\216s.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module externe Adobe Forme de motif) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module externe Adobe Forme de motif) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module externe Forme artistique Adobe) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module externe Forme artistique Adobe) (Forme artistique.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Module externe Forme calligraphique Adobe) (Forme calligraphique.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Halo.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Symbolisme Adobe) (Symbolisme.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Module externe Adobe Enveloppe) (Enveloppe et d\216formation.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Forme compos\216e Adobe) (Extension Pathfinder.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Module externe Peinture dynamique d'Adobe) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Rep\616rage]) 0 Xs([Rep\616rage])Pc1 0.7 0 0.2 k(Nouvelle nuance 2)Pc0 1 1 0 k(Nouvelle nuance 3)Pc0 0 0 0.2 k(Nouvelle nuance 4)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 2 79 255 79 0 50 Lb(Calque 3 - copie) Ln0 A*u1 D0 O0 1 1 0 k0 J 0 j 1 w 4 M []0 d0 XR386.1265 283.8379 m376.0513 271.9844 367.688 271.8477 367.6045 271.8477 C366.2588 271.8477 L366.2588 269.3477 L367.6045 269.3477 L371.1279 269.3477 379.3955 272.0586 388.0313 282.2188 c396.5669 292.2607 399.2964 293.4297 401.2896 294.2842 c402.4692 294.79 403.8442 295.207 405.3115 295.3174 C405.3115 297.8149 L403.3511 297.6943 401.6177 297.1445 400.3633 296.6069 c397.9604 295.5771 395.0425 294.3271 386.1265 283.8379 cf464.9424 313.4058 m460.1895 311.5771 454.4004 305.0435 451.5508 299.7832 c443.21 284.3906 438.6689 283.1387 434.0039 283.1387 c428.5254 283.1387 424.3887 284.2598 422.3535 286.2939 C420.998 287.6748 L415.0483 293.6973 L415.0483 290.1406 L419.208 285.9297 L420.5859 284.5264 L423.1289 281.9834 427.7686 280.6387 434.0039 280.6387 c440.3477 280.6387 445.6113 283.5762 453.748 298.5918 c456.3262 303.3486 461.6816 309.4727 465.8408 311.0728 c468.7109 312.1772 471.7793 312.7354 475.957 312.8989 C475.957 315.4014 L471.4385 315.2319 468.1074 314.6235 464.9424 313.4058 cf*ULB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 5 255 79 255 0 50 Lb(Calque 5) Ln0 A*u0 O0 0 0 0.2 k0 J 0 j 1 w 4 M []0 d0 XR384.3042 327.9839 m381.001 327.9419 378.335 325.2598 378.3237 321.9487 C378.3228 321.9487 L378.3228 273.2744 L378.3237 273.2744 L378.335 269.9639 381.001 267.2822 384.3042 267.2393 C384.3042 267.2354 L397.4653 267.2354 L397.4653 273.7354 L384.8223 273.7354 L384.8223 294.2725 L394.2993 294.2725 L394.2993 300.9507 L384.8223 300.9507 L384.8223 321.4883 L397.4653 321.4883 L397.4653 327.9878 L384.3042 327.9878 L384.3042 327.9839 Lf429.7637 327.9839 m426.4609 327.9419 423.7949 325.2598 423.7832 321.9487 C423.7813 321.9487 L423.7813 273.2744 L423.7832 273.2744 L423.7949 269.9639 426.4609 267.2822 429.7637 267.2393 C429.7637 267.2354 L442.9258 267.2354 L442.9258 273.7354 L430.2813 273.7354 L430.2813 294.2725 L439.7598 294.2725 L439.7598 300.9507 L430.2813 300.9507 L430.2813 321.4883 L442.9258 321.4883 L442.9258 327.9878 L429.7637 327.9878 L429.7637 327.9839 Lf409.9868 328.5254 m404.6392 328.5254 400.3052 323.8799 400.3052 318.1484 c400.3052 318.1436 400.3057 318.1392 400.3057 318.1343 C400.3052 318.1343 L400.3052 300.4785 L400.3062 300.4785 L400.3174 297.168 402.9834 294.4863 406.2866 294.4434 C406.2866 294.4395 L413.168 294.4395 L413.168 273.5879 L406.8159 273.5879 L406.8047 282.9297 L400.3052 282.9297 L400.3052 276.9326 L400.3057 276.9326 L400.313 271.207 404.6436 266.5693 409.9858 266.5693 c415.3335 266.5693 419.6675 271.2148 419.6675 276.9463 c419.6675 276.9512 419.667 276.9561 419.667 276.96 C419.6675 276.96 L419.6675 294.9004 L419.6665 294.9004 L419.6553 298.2109 416.9893 300.8926 413.686 300.9355 C413.686 300.9395 L406.8047 300.9395 L406.8047 321.5063 L413.1567 321.5063 L413.168 312.165 L419.6675 312.165 L419.6675 318.1621 L419.667 318.1621 L419.6597 323.8872 415.3291 328.5254 409.9868 328.5254 cfu455.4863 328.5254 m450.1387 328.5254 445.8047 323.8799 445.8047 318.1484 C445.8047 276.9326 L445.8125 271.207 450.1426 266.5693 455.4844 266.5693 c460.832 266.5693 465.166 271.2148 465.166 276.9463 C465.166 318.1621 L465.1582 323.8872 460.8281 328.5254 455.4863 328.5254 cf0 D458.668 273.5879 m452.3145 273.5879 L452.3047 321.5063 L458.6563 321.5063 L458.668 273.5879 LfU*ULB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Calque 2) Ln0 A*u1 D0 O1 0.7 0 0.2 k0 J 0 j 1 w 4 M []0 d0 XR382.4224 328.6685 m379.1191 328.6265 376.4531 325.9443 376.4419 322.6333 C376.4409 322.6333 L376.4409 273.959 L376.4419 273.959 L376.4531 270.6484 379.1191 267.9668 382.4224 267.9238 C382.4224 267.9199 L395.5835 267.9199 L395.5835 274.4199 L382.9404 274.4199 L382.9404 294.957 L392.4175 294.957 L392.4175 301.6353 L382.9404 301.6353 L382.9404 322.1729 L395.5835 322.1729 L395.5835 328.6724 L382.4224 328.6724 L382.4224 328.6685 Lf427.8818 328.6685 m424.5791 328.6265 421.9131 325.9443 421.9019 322.6333 C421.9009 322.6333 L421.9009 273.959 L421.9019 273.959 L421.9131 270.6484 424.5791 267.9668 427.8818 267.9238 C427.8818 267.9199 L441.0439 267.9199 L441.0439 274.4199 L428.4004 274.4199 L428.4004 294.957 L437.8779 294.957 L437.8779 301.6353 L428.4004 301.6353 L428.4004 322.1729 L441.0439 322.1729 L441.0439 328.6724 L427.8818 328.6724 L427.8818 328.6685 Lf408.105 329.21 m402.7573 329.21 398.4233 324.5645 398.4233 318.833 c398.4233 318.8281 398.4238 318.8237 398.4238 318.8188 C398.4233 318.8188 L398.4233 301.1631 L398.4243 301.1631 L398.4355 297.8525 401.1016 295.1709 404.4048 295.1279 C404.4048 295.124 L411.2861 295.124 L411.2861 274.2725 L404.9341 274.2725 L404.9229 283.6143 L398.4233 283.6143 L398.4233 277.6172 L398.4238 277.6172 L398.4312 271.8916 402.7617 267.2539 408.104 267.2539 c413.4517 267.2539 417.7856 271.8994 417.7856 277.6309 c417.7856 277.6357 417.7852 277.6406 417.7852 277.6445 C417.7856 277.6445 L417.7856 295.585 L417.7847 295.585 L417.7734 298.8955 415.1074 301.5771 411.8042 301.6201 C411.8042 301.624 L404.9229 301.624 L404.9229 322.1909 L411.2749 322.1909 L411.2861 312.8496 L417.7856 312.8496 L417.7856 318.8467 L417.7852 318.8467 L417.7778 324.5718 413.4473 329.21 408.105 329.21 cfu453.6055 329.21 m448.2578 329.21 443.9238 324.5645 443.9238 318.833 C443.9238 277.6172 L443.9316 271.8916 448.2617 267.2539 453.6035 267.2539 c458.9512 267.2539 463.2852 271.8994 463.2852 277.6309 C463.2852 318.8467 L463.2773 324.5718 458.9473 329.21 453.6055 329.21 cf0 D456.7861 274.2725 m450.4336 274.2725 L450.4229 322.1909 L456.7754 322.1909 L456.7861 274.2725 LfU*Uuu*u396.7622 334.3882 m395.5562 337.2095 L393.7505 337.2095 L393.7505 334.3882 L392.9341 334.3882 L392.9341 340.9053 L395.3755 340.9053 L395.9077 340.9053 396.4204 340.8389 396.8569 340.5063 c397.2944 340.1738 397.5513 339.6323 397.5513 339.0811 c397.5513 338.3115 397.0952 337.6182 396.3345 337.4092 c397.6177 334.3882 L396.7622 334.3882 lf1 D395.2808 337.8745 m395.7173 337.8745 396.0786 337.9033 396.4009 338.2358 c396.6294 338.4639 396.7339 338.7773 396.7339 339.0908 c396.7339 339.4707 396.5913 339.7842 396.2778 339.9932 c395.9927 340.1929 395.7173 340.2021 395.3755 340.2021 c393.7505 340.2021 L393.7505 337.8745 L395.2808 337.8745 lf*U*u0 D408.9224 337.5991 m408.9224 339.2236 409.7202 341 411.6021 341 c413.4351 341 414.2808 339.3281 414.2808 337.7227 c414.2808 336.1265 413.4634 334.293 411.6108 334.293 c409.7397 334.293 408.9224 335.9653 408.9224 337.5991 cf1 D413.4253 337.6753 m413.4253 338.2549 413.3306 338.9292 413.0366 339.4517 c412.7417 339.9648 412.2378 340.3257 411.6304 340.3257 c410.1763 340.3257 409.7778 338.7583 409.7778 337.5898 c409.7778 336.4688 410.2339 334.958 411.6108 334.958 c413.0073 334.958 413.4253 336.5542 413.4253 337.6753 cf*U*u0 D430.4863 340.9053 m430.4863 336.7822 L430.4863 336.1362 430.4492 335.5376 430.0117 335.0151 c429.5742 334.4927 428.9199 334.293 428.2539 334.293 c427.6172 334.293 426.9434 334.4263 426.5059 334.9204 c426.0313 335.4521 425.9941 336.1079 425.9941 336.7822 c425.9941 340.9053 L426.8105 340.9053 L426.8105 336.7822 L426.8105 336.3926 426.8203 335.8608 427.0566 335.5186 c427.3242 335.1294 427.875 335.0151 428.3203 335.0151 c428.7383 335.0151 429.2148 335.1484 429.4902 335.4805 c429.8027 335.8511 429.8027 336.3359 429.8027 336.7822 c429.8027 340.9053 L430.4863 340.9053 lf*U*u442.3633 334.3882 m442.3633 340.9053 L444.5469 340.9053 L445.1074 340.9053 445.668 340.8389 446.1152 340.4683 c446.543 340.1074 446.7793 339.499 446.7793 338.9482 c446.7793 338.4448 446.5703 337.9224 446.209 337.5708 c445.7734 337.1431 445.2305 337.0386 444.6426 337.0386 c443.1797 337.0386 L443.1797 334.3882 L442.3633 334.3882 lf1 D444.5566 337.7134 m444.9473 337.7134 445.2891 337.751 445.5918 338.0459 c445.8301 338.2832 445.9531 338.6157 445.9531 338.9482 c445.9531 339.3379 445.8105 339.7271 445.498 339.9741 c445.2227 340.1929 444.9473 340.2212 444.6133 340.2212 c443.1797 340.2212 L443.1797 337.7134 L444.5566 337.7134 lf*UUu*u0 D381.6841 334.3408 m381.1802 334.3408 L380.9624 335.1484 L380.5532 334.5498 379.8696 334.293 379.1567 334.293 c378.2827 334.293 377.647 334.6064 377.1245 335.3003 c376.6304 335.9746 376.4399 336.7539 376.4399 337.5801 c376.4399 339.29 377.3335 341 379.2612 341 c380.5063 341 381.314 340.2974 381.6177 339.1289 c380.8481 338.9385 L380.687 339.7559 380.0601 340.3164 379.2046 340.3164 c377.7319 340.3164 377.3237 338.8154 377.3237 337.6182 c377.3237 337.0576 377.4282 336.3926 377.6938 335.8892 c377.9888 335.3384 378.5679 334.958 379.2144 334.958 c380.2212 334.958 380.8481 335.6421 380.8481 336.6304 c380.8481 336.9912 L379.2231 336.9912 L379.2231 337.6753 L381.6841 337.6753 L381.6841 334.3408 lf*U*u463.2734 334.3882 m459.0547 334.3882 L459.0547 340.9053 L463.1777 340.9053 L463.1777 340.2021 L459.8711 340.2021 L459.8711 338.1313 L462.4941 338.1313 L462.4941 337.4756 L459.8711 337.4756 L459.8711 335.0913 L463.2734 335.0913 L463.2734 334.3882 lf*UUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF